{"ast":null,"code":"var _jsxFileName = \"/Users/pie_trick/Desktop/Semester3/Dublin-Bus-Time/frontend/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { Key } from './key'; // 引入 API key\n\nimport GoogleMapReact from 'google-map-react'; // Default Dublin center\n// 53.347816\n// -6.259317\n\nconst MyPositionMarker = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 40\n  }\n}, text);\n\nconst Marker = ({\n  icon,\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  style: {\n    height: '30px',\n    width: '30px'\n  },\n  src: icon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, text)); // Map state\n\n\nconst [mapType, setMapType] = useState('roadmap'); // 改變地圖樣式\n\nconst handleMapTypeId = e => {\n  setMapType(e.target.name);\n}; // Map\n\n\nconst SimpleMap = props => {\n  const [myPosition, setMyPosition] = useState({\n    lat: 53.347816,\n    lng: -6.259317\n  });\n  const [mapApiLoaded, setMapApiLoaded] = useState(false);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapApi, setMapApi] = useState(null);\n  const [places, setPlaces] = useState([]);\n\n  const apiHasLoaded = (map, maps) => {\n    setMapInstance(map);\n    setMapApi(maps);\n    setMapApiLoaded(true);\n  };\n\n  const handleCenterChange = ({\n    bound,\n    zoom,\n    center\n  }) => {\n    if (mapApiLoaded) {\n      setMyPosition({\n        // center.lat()  center.lng() catch the center in the screen\n        lat: mapInstance.center.lat(),\n        lng: mapInstance.center.lng()\n      });\n    }\n  };\n\n  const [searchType, setSearchType] = useState([]); // Find bus stop\n\n  const findLocation = () => {\n    if (mapApiLoaded) {\n      const service = new mapApi.places.PlacesService(mapInstance);\n      const request = {\n        location: myPosition,\n        radius: 1000,\n        type: searchType\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status === mapApi.places.PlacesServiceStatus.OK) {\n          setPlaces(results);\n        }\n      });\n    }\n  };\n\n  const handleSearchType = e => {\n    setSearchType(e.target.name);\n  };\n\n  const SearchType = ({\n    text,\n    type\n  }) => {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: text,\n      name: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleSearchType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchType, {\n    text: \"bus stop\",\n    type: \"bus_station\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"show place\",\n    onClick: findLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: Key,\n      libraries: ['places'] // Our api\n\n    } //Fix the react google map bug\n    ,\n    distanceToMouse: () => {},\n    options: {\n      mapTypeId: 'hybrid'\n    },\n    onChange: handleCenterChange,\n    defaultCenter: props.center,\n    defaultZoom: props.zoom,\n    yesIWantToUseGoogleMapApiInternals: true //map: map itself, maps: google map object \n    ,\n    onGoogleApiLoaded: ({\n      map,\n      maps\n    }) => apiHasLoaded(map, maps),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyPositionMarker, {\n    lat: myPosition.lat,\n    lng: myPosition.lng,\n    text: \"My Position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), places.map(item => /*#__PURE__*/React.createElement(Marker, {\n    icon: item.icon,\n    key: item.id,\n    lat: item.geometry.location.lat(),\n    lng: item.geometry.location.lng(),\n    text: item.name,\n    placeId: item.place_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n}; // Set defaultProps\n\n\nSimpleMap.defaultProps = {\n  center: {\n    lat: 53.348358,\n    lng: -6.260327\n  },\n  zoom: 17\n}; // App\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SimpleMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pie_trick/Desktop/Semester3/Dublin-Bus-Time/frontend/src/App.js"],"names":["React","Component","useState","Key","GoogleMapReact","MyPositionMarker","text","Marker","icon","height","width","mapType","setMapType","handleMapTypeId","e","target","name","SimpleMap","props","myPosition","setMyPosition","lat","lng","mapApiLoaded","setMapApiLoaded","mapInstance","setMapInstance","mapApi","setMapApi","places","setPlaces","apiHasLoaded","map","maps","handleCenterChange","bound","zoom","center","searchType","setSearchType","findLocation","service","PlacesService","request","location","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","handleSearchType","SearchType","key","libraries","mapTypeId","item","id","geometry","place_id","defaultProps","App"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Key } from './key' // 引入 API key\nimport GoogleMapReact from 'google-map-react';\n// Default Dublin center\n// 53.347816\n// -6.259317\nconst MyPositionMarker = ({ text }) => <div>{text}</div>;\n\nconst Marker = ({ icon, text }) => (\n  <div>\n    <img style={{ height: '30px', width: '30px' }} src={icon} />\n    <div>{text}</div>\n  </div>\n)\n\n// Map state\nconst [mapType, setMapType] = useState('roadmap')\n\n// 改變地圖樣式\nconst handleMapTypeId = e => {\n  setMapType(e.target.name)\n}\n\n\n// Map\nconst SimpleMap = (props) => {\n  const [myPosition, setMyPosition] = useState({\n    lat: 53.347816,\n    lng: -6.259317\n  })\n\n  const [mapApiLoaded, setMapApiLoaded] = useState(false)\n  const [mapInstance, setMapInstance] = useState(null)\n  const [mapApi, setMapApi] = useState(null)\n  const [places, setPlaces] = useState([])\n\n  const apiHasLoaded = (map, maps) => {\n    setMapInstance(map)\n    setMapApi(maps)\n    setMapApiLoaded(true)\n  };\n\n  const handleCenterChange = ({bound, zoom, center}) => {\n    if(mapApiLoaded) {\n      setMyPosition({\n        // center.lat()  center.lng() catch the center in the screen\n        lat: mapInstance.center.lat(),\n        lng: mapInstance.center.lng()\n      })\n    }\n  }\n\n  const [searchType, setSearchType] = useState([])\n\n  // Find bus stop\n  const findLocation = () => {\n    if(mapApiLoaded) {\n      const service = new mapApi.places.PlacesService(mapInstance)\n\n      const request = {\n        location: myPosition,\n        radius: 1000,\n        type: searchType\n      };\n\n      service.nearbySearch(request, (results, status) => {\n        if(status === mapApi.places.PlacesServiceStatus.OK) {\n          setPlaces(results)\n        }\n      })\n    }\n  }\n\n  const handleSearchType = e => {\n    setSearchType(e.target.name)\n  }\n\n  const SearchType = ({ text, type }) => {\n    return <input type=\"button\" value={text} name={type} />\n  }\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <div onClick={handleSearchType}>\n        <SearchType text=\"bus stop\" type=\"bus_station\" />\n      </div>\n      <input type=\"button\" value=\"show place\" onClick={findLocation} />\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key: Key,\n          libraries:['places'] // Our api\n        }}\n      \n        //Fix the react google map bug\n        distanceToMouse={()=>{}}\n\n        options={{ mapTypeId: 'hybrid' }}\n        onChange={handleCenterChange}\n        defaultCenter={props.center}\n        defaultZoom={props.zoom}\n        yesIWantToUseGoogleMapApiInternals\n        //map: map itself, maps: google map object \n        onGoogleApiLoaded={({ map, maps }) => apiHasLoaded(map, maps)}\n      >\n        <MyPositionMarker\n          lat={myPosition.lat}\n          lng={myPosition.lng}\n          text=\"My Position\"\n        />\n        {places.map(item=>(\n          <Marker\n            icon={item.icon}\n            key={item.id}\n            lat={item.geometry.location.lat()}\n            lng={item.geometry.location.lng()}\n            text={item.name}\n            placeId={item.place_id}\n          />\n        ))}\n      </GoogleMapReact>\n    </div>\n  );\n}\n\n// Set defaultProps\nSimpleMap.defaultProps = {\n  center: {\n    lat: 53.348358, \n    lng: -6.260327\n  },\n  zoom: 17\n};\n\n\n// App\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SimpleMap />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}