{"ast":null,"code":"var _jsxFileName = \"/Users/pie_trick/Desktop/Semester3/Dublin-Bus-Time/frontend/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { Key } from './key'; // 引入 API key\n\nimport GoogleMapReact from 'google-map-react'; // Default Dublin center\n// 53.347816\n// -6.259317\n\nconst MyPositionMarker = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 40\n  }\n}, text);\n\n/*#__PURE__*/\nReact.createElement(\"input\", {\n  type: \"button\",\n  value: \"Show Bus Stop\",\n  onClick: findBusStopLocation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 1\n  }\n}); // Find bus stop\n\nconst findBusStopLocation = () => {\n  if (mapApiLoaded) {\n    const service = new mapApi.places.PlacesService(mapInstance);\n    const request = {\n      location: myPosition,\n      radius: 1000,\n      type: ['bus stop']\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === mapApi.places.PlacesServiceStatus.OK) {\n        console.log(results);\n      }\n    });\n  }\n}; // Map\n\n\nconst SimpleMap = props => {\n  const [myPosition, setMyPosition] = useState({\n    lat: 53.347816,\n    lng: -6.259317\n  });\n  const [mapApiLoaded, setMapApiLoaded] = useState(false);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapApi, setMapApi] = useState(null);\n\n  const apiHasLoaded = (map, maps) => {\n    setMapInstance(map);\n    setMapApi(maps);\n    setMapApiLoaded(true);\n  };\n\n  const handleCenterChange = () => {\n    if (mapApiLoaded) {\n      setMyPosition({\n        // center.lat()  center.lng() catch the center in the screen\n        lat: mapInstance.center.lat(),\n        lng: mapInstance.center.lng()\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: Key\n      },\n      onBoundsChange: handleCenterChange,\n      defaultCenter: props.center,\n      defaultZoom: props.zoom,\n      yesIWantToUseGoogleMapApiInternals: true // set true\n      ,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => apiHasLoaded(map, maps) // execute after loading\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyPositionMarker, {\n      lat: myPosition.lat,\n      lng: myPosition.lng,\n      text: \"My Position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    })))\n  );\n}; // Set defaultProps\n\n\nSimpleMap.defaultProps = {\n  center: {\n    lat: 53.348358,\n    lng: -6.260327\n  },\n  zoom: 17\n}; // App\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SimpleMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pie_trick/Desktop/Semester3/Dublin-Bus-Time/frontend/src/App.js"],"names":["React","Component","useState","Key","GoogleMapReact","MyPositionMarker","text","findBusStopLocation","mapApiLoaded","service","mapApi","places","PlacesService","mapInstance","request","location","myPosition","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","SimpleMap","props","setMyPosition","lat","lng","setMapApiLoaded","setMapInstance","setMapApi","apiHasLoaded","map","maps","handleCenterChange","center","height","width","key","zoom","defaultProps","App"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Key } from './key' // 引入 API key\nimport GoogleMapReact from 'google-map-react';\n// Default Dublin center\n// 53.347816\n// -6.259317\nconst MyPositionMarker = ({ text }) => <div>{text}</div>;\n<input type=\"button\" value=\"Show Bus Stop\" onClick={findBusStopLocation} />\n// Find bus stop\nconst findBusStopLocation = () => {\n  if(mapApiLoaded) {\n    const service = new mapApi.places.PlacesService(mapInstance)\n\n    const request = {\n      location: myPosition,\n      radius: 1000,\n      type: ['bus stop']\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if(status === mapApi.places.PlacesServiceStatus.OK) {\n        console.log(results)\n      }\n    })\n  }\n}\n\n// Map\nconst SimpleMap = (props) => {\n  const [myPosition, setMyPosition] = useState({\n    lat: 53.347816,\n    lng: -6.259317\n  })\n\n  const [mapApiLoaded, setMapApiLoaded] = useState(false)\n  const [mapInstance, setMapInstance] = useState(null)\n  const [mapApi, setMapApi] = useState(null)\n\n  const apiHasLoaded = (map, maps) => {\n    setMapInstance(map)\n    setMapApi(maps)\n    setMapApiLoaded(true)\n  };\n\n  const handleCenterChange = () => {\n    if(mapApiLoaded) {\n      setMyPosition({\n        // center.lat()  center.lng() catch the center in the screen\n        lat: mapInstance.center.lat(),\n        lng: mapInstance.center.lng()\n      })\n    }\n  }\n\n\n  return (\n    // Important! Always set the container height explicitly\n    <div style={{ height: '100vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: Key }}\n        onBoundsChange={handleCenterChange}\n        defaultCenter={props.center}\n        defaultZoom={props.zoom}\n        yesIWantToUseGoogleMapApiInternals // set true\n        onGoogleApiLoaded={({ map, maps }) => apiHasLoaded(map, maps)} // execute after loading\n      >\n        <MyPositionMarker\n          lat={myPosition.lat}\n          lng={myPosition.lng}\n          text=\"My Position\"\n        />\n      </GoogleMapReact>\n    </div>\n  );\n}\n\n// Set defaultProps\nSimpleMap.defaultProps = {\n  center: {\n    lat: 53.348358, \n    lng: -6.260327\n  },\n  zoom: 17\n};\n\n\n// App\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SimpleMap />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}